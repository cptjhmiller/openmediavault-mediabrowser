#!/bin/sh
#
# Copyright (C) 2014 OpenMediaVault Plugin Developers
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

RUN_AS="mediabrowser"
RUN_GRP="users"
SERVICE="mediabrowser"
SERVICE_XPATH="//services/${SERVICE}"

LINK="https://github.com/MediaBrowser/MediaBrowser.Releases/raw/master/Server/MediaBrowser.Mono.zip"
FILE="/tmp/MBServer.Mono.zip"
INSTALL_DIR="/opt/${SERVICE}"

if [ "$(omv_config_get "${SERVICE_XPATH}/enable")" != "1" ]; then
	update-rc.d ${SERVICE} disable || :
fi

install()
{
	if omv_config_exists "${SERVICE_XPATH}"; then
		data_directory="$(omv_config_get "${SERVICE_XPATH}/db-folder")"
	fi
	if [ "${data_directory}" = "" ]; then
		data_directory="/var/lib/${SERVICE}"
	fi

	if [ -d "${INSTALL_DIR}" ]; then
		if [ -d "${INSTALL_DIR}/ProgramData-Server" ]; then
			echo "Moving data directory..."
			if [ ! -d "${data_directory}" ]; then
				mkdir -p "${data_directory}"
				chown ${RUN_AS}:${RUN_GRP} ${data_directory}
			fi
			if [ ! -d "${INSTALL_DIR}/ProgramData-Server" ]; then
				cp -rf ${INSTALL_DIR}/ProgramData-Server ${data_directory}
				chown -R ${RUN_AS}:${RUN_GRP} ${data_directory}
				rm -r ${INSTALL_DIR}/ProgramData-Server
			fi
		fi
		rm -rf "${INSTALL_DIR}"
	fi

	mkdir -p "${INSTALL_DIR}"
	chown ${RUN_AS}:${RUN_GRP} ${INSTALL_DIR}

    if [ -f "${FILE}" ]; then
        rm -f ${FILE}
    fi
	echo "Downloading..."
    wget ${LINK} -O ${FILE}

    echo "Extracting..."
    unzip ${FILE} -d ${INSTALL_DIR}
    rm -f ${FILE}

    chown -R ${RUN_AS}:${RUN_GRP} ${INSTALL_DIR}

	echo "Calling insserv..."
    insserv ${SERVICE}
	echo "...ok"
}

moveDbFolder()
{
	current_data_directory = $(omv_config_get "${SERVICE_XPATH}/old_db-folder")
	data_directory = $(omv_config_get "${SERVICE_XPATH}/db-folder")

	if [ ! -d "${data_directory}" ]; then
		mkdir -p "${data_directory}"
	fi

	cp -rfp ${current_data_directory}/* ${data_directory}/
	chown -R ${RUN_AS}:${RUN_GRP} ${data_directory}

	rm -rf ${current_data_directory}/*
	xmlstarlet ed -L -u "${SERVICE_XPATH}/old_db-folder" -v "" -n ${OMV_CONFIG_FILE}
}

case $2 in
    install)
		echo "Installing Media Browser..."
		install
    ;;

    update)
		echo "Updating Media Browser..."
		update-rc.d ${SERVICE} stop
        install
    ;;

	moveDbFolder)
		if [ "$(omv_config_get "${SERVICE_XPATH}/old_db-folder")" != "" ]; then
			echo "Moving database..."
			moveDbFolder
		fi
	;;

    *)
    ;;
esac

if [ "$(omv_config_get "${SERVICE_XPATH}/enable")" != "0" ]; then
    invoke-rc.d ${SERVICE} start
fi

exit 0
